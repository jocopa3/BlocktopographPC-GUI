/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jocopa3.blocktopographpc.gui.panels;

import com.jocopa3.blocktopographpc.gui.MaterialIcon;
import com.jocopa3.blocktopographpc.util.MessageImportance;
import java.awt.Font;
import java.awt.FontMetrics;
import java.util.logging.Level;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.LayoutStyle;
import javax.swing.SwingConstants;

/**
 *
 * @author Matt
 */
public class WorldWindowFooterBar extends javax.swing.JPanel {

    /**
     * Creates new form WorldWindowFooterBar
     */
    public WorldWindowFooterBar() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        footerMessage = new JLabel();
        messageIconLabel = new JLabel();

        setBorder(BorderFactory.createEtchedBorder());

        footerMessage.setHorizontalAlignment(SwingConstants.RIGHT);
        footerMessage.setHorizontalTextPosition(SwingConstants.RIGHT);

        messageIconLabel.setIconTextGap(0);

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(footerMessage, GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(messageIconLabel)
                .addContainerGap())
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(footerMessage)
                    .addComponent(messageIconLabel, GroupLayout.PREFERRED_SIZE, 23, GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void logMessage(String message, MessageImportance importance) {
        footerMessage.setText(message);
        
        MaterialIcon messageIcon = null;
        
        switch(importance) {
            case WARNING:
                messageIcon = MaterialIcon.WARNING;
                footerMessage.setFont(footerMessage.getFont().deriveFont(footerMessage.getFont().getStyle() | Font.PLAIN));
                break;
            case ERROR:
                messageIcon = MaterialIcon.ERROR;
                footerMessage.setFont(footerMessage.getFont().deriveFont(footerMessage.getFont().getStyle() | Font.BOLD));
                break;
            default:
                footerMessage.setFont(footerMessage.getFont().deriveFont(footerMessage.getFont().getStyle() | Font.PLAIN));
        }
        
        if(messageIcon != null) {
            setButtonMaterialIcon(messageIconLabel, messageIcon);
        }
    }
    
    private void setButtonMaterialIcon(JLabel label, MaterialIcon icon) {
        int iconWidth, iconHeight;

        if (label.getFont() != null && getGraphics() != null) {
            // Find out how much to scale the icon by
            FontMetrics metrics = getGraphics().getFontMetrics(label.getFont());
            int height = metrics.getHeight() - 1;
            float scaleRatio = ((float) height) / ((float) icon.getBlackIcon().getIconHeight());

            iconWidth = Math.round(((float) icon.getBlackIcon().getIconWidth()) * scaleRatio);
            iconHeight = height;
        } else {
            //System.out.println("Is null: "+(label.getFont() == null) +", "+(getGraphics() == null));
            iconWidth = label.getFont().getSize();
            iconHeight = label.getFont().getSize();
        }
        
        label.setIcon(icon.getBlackIcon(iconWidth, iconHeight));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel footerMessage;
    private JLabel messageIconLabel;
    // End of variables declaration//GEN-END:variables
}
